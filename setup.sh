#!/bin/bash

DOTFILES_HOME="$(dirname $(readlink -f "$0"))"
SCRIPT_UUID=c30aa1879bc864389e1f88f1562751d3

cd $DOTFILES_HOME

backup() {
    # If the path doesn't exist we don't need to back it up
    [ -e "$1" ] || return 0
    # If it's already a link to here, we don't either
    readlink "$1" | grep -F "$DOTFILES_HOME" > /dev/null && return 0
    # If the file was generated by this script, we don't need to back it up
    if [ -f "$1" ] && grep "$SCRIPT_UUID" "$1" 2>&1 > /dev/null ; then
        rm "$1"
        return 0
    fi
    # Try moving the file: if that fails for some reason (e.g. backup file not
    # writable) backing up failed
    mv -i "$1" "$1.bak" || return -1
    # If the file still exists, fail. The user may have said no to the
    # overwrite prompt if the backup file already existed
    [ -e "$1" ] && return -1
    return 0
}

for rc in \
    ~/.bashrc ~/.zshrc ~/.Xresources ~/.ackrc ~/.vimrc ~/.vim ~/.tmux.conf \
    ~/.tmux ~/.xsessionrc
do
    backup "$rc" || exit -1
done

# Now we can safely proceed, the files have been backed up
tee ~/.bashrc ~/.xsessionrc > ~/.zshrc <<EOF
################################################
# THIS SCRIPT MAY BE AUTOMATICALLY OVERWRITTEN #
# ---                                          #
# To prevent this, remove the following line:  #
# $SCRIPT_UUID                                 
################################################
export DOTFILES_HOME='$DOTFILES_HOME'
EOF

echo "source '$DOTFILES_HOME/bashrc'" >> ~/.bashrc
echo "source '$DOTFILES_HOME/zshrc'" >> ~/.zshrc
echo ". '$DOTFILES_HOME/xsessionrc'" >> ~/.xsessionrc
ln -sf "$DOTFILES_HOME/Xresources" ~/.Xresources
ln -sf "$DOTFILES_HOME/ackrc" ~/.ackrc
ln -sf "$DOTFILES_HOME/vimrc" ~/.vimrc
ln -sf "$DOTFILES_HOME/vim" ~/.vim
ln -sf "$DOTFILES_HOME/tmux.conf" ~/.tmux.conf
ln -sf "$DOTFILES_HOME/tmux" ~/.tmux

git submodule init
git submodule update

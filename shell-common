if ! ps aux | grep -v grep | grep "$SSH_AGENT_PID" &>/dev/null && [ -w "$SSH_AUTH_SOCK" ] ; then
    SSH_ENV="$HOME/.ssh/agent_env"
    function start_agent {
        /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
        chmod 600 "${SSH_ENV}"
        . "${SSH_ENV}" > /dev/null
        /usr/bin/ssh-add
    }

    # Source SSH settings, if applicable
    if [ -f "${SSH_ENV}" ]; then
        . "${SSH_ENV}" > /dev/null
        #ps ${SSH_AGENT_PID} doesn't work under cywgin
        ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
            start_agent
        }
    else
        start_agent
    fi
fi

alias open=xdg-open
alias o=xdg-open
alias :q=exit
export EDITOR=vim
alias tmux=tmux\ -2
alias ls="ls --color=auto"
alias grep="grep --color=auto"
alias cmake="PATH=/usr/lib/ccache:$PATH cmake"

_PB_ENV=~/perl5/perlbrew/etc/bashrc
[ -f "$_PB_ENV" ] && source "$_PB_ENV"

TERM_EM=$(basename -- "$(ps -ocommand= -p $PPID | awk '{ print $1 }')")
case $TERM_EM in
    konsole|lxterminal|gnome-terminal-server)
        export TERM=xterm-256color ;;
esac

add_to_path() {
    local path_arr already_there OLDIFS shell
    shell="$(ps -o comm= $$)"
    case $SHELL in
    *zsh)
        OLDIFS="$IFS"
        IFS=:
        echo $PATH | read -A path_arr
        IFS=$OLDIFS
        ;;
    *bash)
        IFS=: read -a path_arr <<< "$PATH"
        ;;
    *)
        # Fall back to adding it unconditionally
        export PATH="$1:$PATH"
        ;;
    esac
    while [ -n "$1" ] ; do
        already_there=false
        for item in "${path_arr[@]}" ; do
            if [ "$1" = "$item" ] ; then
                already_there=true
                break
            fi
        done
        if ! $already_there ; then
            PATH=$1:$PATH
        fi
        shift
    done
}

for p in ~/bin ~/.local/bin ; do
    [ -d $p ] && add_to_path $p
done
